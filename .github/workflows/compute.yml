name: Watch Activity

on:
  workflow_dispatch:
    inputs:
      stateId:
        description: "State Id"
      eventName:
        description: "Event Name"
      eventPayload:
        description: "Event Payload"
      settings:
        description: "Settings"
      authToken:
        description: "Auth Token"
      ref:
        description: "Ref"
      signature:
        description: "Used for authenticating requests from the kernel."
      command:
        description: "Command"

env:
  APP_ID: ${{ secrets.APP_ID }}
  APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

jobs:
  compute:
    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'development' }}
    permissions: write-all
    name: Daemon Disqualifier
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      PLUGIN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      KERNEL_PUBLIC_KEY: ${{ secrets.KERNEL_PUBLIC_KEY }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: ${{ toJSON(inputs) }}
        shell: cat {0}

      - name: Watch Activity
        uses: ./

      - name: Get GitHub App token
        if: env.APP_ID != '' && env.APP_PRIVATE_KEY != ''
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ env.APP_ID }}
          private-key: ${{ env.APP_PRIVATE_KEY }}

      - name: Commit updated DB
        uses: swinton/commit@v2.x
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token || github.token }}
        with:
          files: |
            db.json
          commit-message: "chore: [skip ci] update db.json"
          # We save to the default branch since CRON cannot access any other branch
          ref: ${{ github.event.repository.default_branch }}
